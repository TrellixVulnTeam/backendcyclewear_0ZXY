{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport thunk from \"redux-thunk\";\nimport rootSaga from \"./rootSaga\";\nimport rootReducer from \"../store.old/rootReducer\";\n\nfunction reducers() {\n  return {\n    testing: \"PRUEBA\"\n  };\n}\n\nconst bindMiddleware = middleware => {\n  if (process.env.NODE_ENV !== \"production\") {\n    const {\n      composeWithDevTools\n    } = require(\"redux-devtools-extension\");\n\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nexport const makeStore = context => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport default (() => {\n  return { ...createStore(reducers, applyMiddleware(sagaMiddleware)),\n    runSaga: sagaMiddleware.run(rootSaga)\n  };\n});","map":{"version":3,"sources":["C:/ProyectosProductivos/managebackendmp/backend/src/store/store.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","thunk","rootSaga","rootReducer","reducers","testing","bindMiddleware","middleware","process","env","NODE_ENV","composeWithDevTools","require","makeStore","context","sagaMiddleware","store","sagaTask","run","runSaga"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,SAASC,QAAT,GAAoB;AAChB,SAAO;AACHC,IAAAA,OAAO,EAAG;AADP,GAAP;AAGH;;AAED,MAAMC,cAAc,GAAIC,UAAD,IAAgB;AACnC,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvC,UAAM;AAAEC,MAAAA;AAAF,QAA0BC,OAAO,CAAC,0BAAD,CAAvC;;AACA,WAAOD,mBAAmB,CAACZ,eAAe,CAAC,GAAGQ,UAAJ,CAAhB,CAA1B;AACH;;AACD,SAAOR,eAAe,CAAC,GAAGQ,UAAJ,CAAtB;AACH,CAND;;AAQA,OAAO,MAAMM,SAAS,GAAIC,OAAD,IAAa;AAClC,QAAMC,cAAc,GAAGf,oBAAoB,EAA3C;AACA,QAAMgB,KAAK,GAAGlB,WAAW,CAACK,WAAD,EAAcG,cAAc,CAAC,CAACS,cAAD,CAAD,CAA5B,CAAzB;AAEAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBhB,QAAnB,CAAjB;AACA,SAAOc,KAAP;AACH,CANM;AAQP,gBAAe,MAAM;AACjB,SAAO,EACH,GAAGlB,WAAW,CAACM,QAAD,EAAWL,eAAe,CAACgB,cAAD,CAA1B,CADX;AAEHI,IAAAA,OAAO,EAAEJ,cAAc,CAACG,GAAf,CAAmBhB,QAAnB;AAFN,GAAP;AAIH,CALD","sourcesContent":["import {createStore, applyMiddleware} from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootSaga from \"./rootSaga\";\r\nimport rootReducer from \"../store.old/rootReducer\";\r\n\r\nfunction reducers() {\r\n    return {\r\n        testing : \"PRUEBA\"\r\n    };\r\n}\r\n\r\nconst bindMiddleware = (middleware) => {\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n        return composeWithDevTools(applyMiddleware(...middleware));\r\n    }\r\n    return applyMiddleware(...middleware);\r\n};\r\n\r\nexport const makeStore = (context) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const store = createStore(rootReducer, bindMiddleware([sagaMiddleware]));\r\n\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nexport default () => {\r\n    return {\r\n        ...createStore(reducers, applyMiddleware(sagaMiddleware)),\r\n        runSaga: sagaMiddleware.run(rootSaga)\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
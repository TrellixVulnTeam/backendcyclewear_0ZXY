{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProyectosProductivos\\\\managebackendmp\\\\backend\\\\src\\\\components\\\\common\\\\dropzone.js\";\nimport React from 'react';\nimport Dropzone from 'react-dropzone-uploader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyUploader = () => {\n  // specify upload params and url for your files\n  const getUploadParams = _ref => {\n    let {\n      meta\n    } = _ref;\n    return {\n      url: 'https://httpbin.org/post'\n    };\n  }; // called every time a file's `status` changes\n\n\n  const handleChangeStatus = (_ref2, status) => {\n    let {\n      meta,\n      file\n    } = _ref2;\n    console.log(status, meta, file);\n  }; // receives array of files that are done uploading when submit button is clicked\n\n\n  const handleSubmit = (files, allFiles) => {\n    console.log(files.map(f => f.meta));\n    allFiles.forEach(f => f.remove());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropzone\",\n    children: /*#__PURE__*/_jsxDEV(Dropzone, {\n      getUploadParams: getUploadParams,\n      onChangeStatus: handleChangeStatus,\n      onSubmit: handleSubmit,\n      accept: \"image/*,audio/*,video/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyUploader;\nexport default MyUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyUploader\");","map":{"version":3,"sources":["C:/ProyectosProductivos/managebackendmp/backend/src/components/common/dropzone.js"],"names":["React","Dropzone","MyUploader","getUploadParams","meta","url","handleChangeStatus","status","file","console","log","handleSubmit","files","allFiles","map","f","forEach","remove"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AACvB;AACA,QAAMC,eAAe,GAAG,QAAc;AAAA,QAAb;AAAEC,MAAAA;AAAF,KAAa;AAAE,WAAO;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAP;AAA4C,GAApF,CAFuB,CAIvB;;;AACA,QAAMC,kBAAkB,GAAG,QAAiBC,MAAjB,KAA4B;AAAA,QAA3B;AAAEH,MAAAA,IAAF;AAAQI,MAAAA;AAAR,KAA2B;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoBH,IAApB,EAA0BI,IAA1B;AAAiC,GAA1F,CALuB,CAOvB;;;AACA,QAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACE,GAAN,CAAUC,CAAC,IAAIA,CAAC,CAACX,IAAjB,CAAZ;AACAS,IAAAA,QAAQ,CAACG,OAAT,CAAiBD,CAAC,IAAIA,CAAC,CAACE,MAAF,EAAtB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE,QAAC,QAAD;AACA,MAAA,eAAe,EAAEd,eADjB;AAEA,MAAA,cAAc,EAAEG,kBAFhB;AAGA,MAAA,QAAQ,EAAEK,YAHV;AAIA,MAAA,MAAM,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAxBD;;KAAMT,U;AA0BN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport Dropzone from 'react-dropzone-uploader'\r\n\r\n\r\nconst MyUploader = () => {\r\n  // specify upload params and url for your files\r\n  const getUploadParams = ({ meta }) => { return { url: 'https://httpbin.org/post' } }\r\n  \r\n  // called every time a file's `status` changes\r\n  const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\r\n  \r\n  // receives array of files that are done uploading when submit button is clicked\r\n  const handleSubmit = (files, allFiles) => {\r\n    console.log(files.map(f => f.meta))\r\n    allFiles.forEach(f => f.remove())\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropzone\">\r\n      <Dropzone\r\n      getUploadParams={getUploadParams}\r\n      onChangeStatus={handleChangeStatus}\r\n      onSubmit={handleSubmit}\r\n      accept=\"image/*,audio/*,video/*\"\r\n    />\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default MyUploader"]},"metadata":{},"sourceType":"module"}
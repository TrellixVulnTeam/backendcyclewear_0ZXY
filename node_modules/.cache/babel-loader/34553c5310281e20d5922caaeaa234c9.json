{"ast":null,"code":"import React, { useState } from \"react\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport thunk from 'redux-thunk'; //import {composeWithDevTools} from 'redux-devtools-extension';\n\nconst bindMiddleware = middleware => {\n  let mode_env = \"production\"; //if (process.env.NODE_ENV !== \"production\") {\n\n  /*\r\n  if (mode_env !== \"production\") {\r\n  const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n  return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n  */\n};\n\nexport const makeStore = context => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport const wrapper = createWrapper(makeStore, {\n  debug: false\n});","map":{"version":3,"sources":["C:/ProyectosProductivos/managebackendmp/backend/src/store/store.js"],"names":["React","useState","applyMiddleware","createStore","createSagaMiddleware","rootReducer","rootSaga","createWrapper","thunk","bindMiddleware","middleware","mode_env","makeStore","context","sagaMiddleware","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AAEA,MAAMC,cAAc,GAAIC,UAAD,IAAgB;AACnC,MAAIC,QAAQ,GAAG,YAAf,CADmC,CAGnC;;AACI;AACR;AACA;AACA;AACA;AACA;AACA;AACC,CAXD;;AAaA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAa;AAClC,QAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,QAAMW,KAAK,GAAGZ,WAAW,CAACE,WAAD,EAAcI,cAAc,CAAC,CAACK,cAAD,CAAD,CAA5B,CAAzB;AAEAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBX,QAAnB,CAAjB;AACA,SAAOS,KAAP;AACH,CANM;AAQP,OAAO,MAAMG,OAAO,GAAGX,aAAa,CAACK,SAAD,EAAY;AAAEO,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B","sourcesContent":["import React, { useState } from \"react\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport rootSaga from \"./rootSaga\";\r\nimport { createWrapper } from \"next-redux-wrapper\";\r\nimport thunk from 'redux-thunk';\r\n//import {composeWithDevTools} from 'redux-devtools-extension';\r\n \r\nconst bindMiddleware = (middleware) => {\r\n    let mode_env = \"production\";\r\n\r\n    //if (process.env.NODE_ENV !== \"production\") {\r\n        /*\r\n    if (mode_env !== \"production\") {\r\n        const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n        return composeWithDevTools(applyMiddleware(...middleware));\r\n    }\r\n    return applyMiddleware(...middleware);\r\n    */\r\n};\r\n\r\nexport const makeStore = (context) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const store = createStore(rootReducer, bindMiddleware([sagaMiddleware]));\r\n\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nexport const wrapper = createWrapper(makeStore, { debug: false });\r\n"]},"metadata":{},"sourceType":"module"}
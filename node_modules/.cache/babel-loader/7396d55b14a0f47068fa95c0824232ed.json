{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProyectosProductivos\\\\backendcyclewear\\\\backend\\\\src\\\\components\\\\sales\\\\orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport Breadcrumb from \"../common/breadcrumb\";\nimport data from \"../../assets/data/orders\";\nimport Datatable from \"../common/datatable\";\nimport { Card, CardBody, CardHeader, Col, Container, Form, FormGroup, Input, Label, Row, Button, Modal, ModalFooter, ModalHeader, ModalBody } from \"reactstrap\";\nimport swal from \"sweetalert\";\nimport Loading from '../elements/Loading/Loading';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditAttributesIcon from '@material-ui/icons/EditAttributes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const [lisPedidos, setListPedidos] = useState([]);\n  const [pedidoSeleccionado, setPedidoSeleccionado] = useState([]);\n  const [listItemsPedidoSeleccionado, setListItemsPedidoSeleccionado] = useState([]);\n  const [modalVariantes, setModalVariantes] = useState(false);\n  const [productoSeleccionado, setProductoSeleccionado] = useState({});\n  useEffect(() => {\n    const newDet = [];\n    let contador = 0;\n    let contadordos = 0;\n\n    const leePedidos = async () => {\n      //setLoading(true);\n      const params = {\n        pedido: 0\n      }; //console.log(\"FECHA \", params);\n\n      await axios({\n        method: 'get',\n        url: 'https://sitbusiness.co/cyclewear/api/210',\n        params\n      }).then(res => {\n        //console.log(\"PEDIDOS : \", res.data)\n        setListPedidos(res.data);\n      }).catch(function (error) {\n        console.log(\"ERROR LEYENDO FACTURAS\");\n      });\n    };\n\n    leePedidos();\n  }, []);\n\n  const seleccionarPedido = (pedido, caso) => {\n    console.log(\"PEDIDO : \", pedido);\n    setPedidoSeleccionado(pedido);\n    /*\r\n            const newDet = [];\r\n            {\r\n                listVariantesProductos && listVariantesProductos.map((variante, index) => {\r\n                    {\r\n                        //console.log(\"INTERNO VARIANTE : \", variante.idinterno)\r\n                        if (producto.idinterno == variante.idinterno) {\r\n                            let item = {\r\n                                value: variante.value,\r\n                                label: variante.label,\r\n                                id: variante.id,\r\n                                idvariante: variante.idvariante,\r\n                                idinterno: variante.idinterno,\r\n                                nombrevarianteuno: variante.nombrevarianteuno,\r\n                                nombrevariantedos: variante.nombrevariantedos,\r\n                                nombrevariantetres: variante.nombrevariantetres,\r\n                                nombrevariantecuatro: variante.nombrevariantecuatro,\r\n                                nombrevariantecinco: variante.nombrevariantecinco,\r\n                                preciobasevariante: variante.preciobasevariante,\r\n                                precioventavariante: variante.precioventavariante,\r\n                                cantidadvariante: variante.cantidadvariante,\r\n                                codigobarravariante: variante.codigobarravariante,\r\n                                skuvariante: variante.skuvariante,\r\n                                taxcodevariante: variante.taxcodevariante,\r\n                                fechaingreso: variante.fechaingreso,\r\n                                fechamodificacion: variante.fechaingreso,\r\n                                estado: variante.estado,\r\n                                nombretipoproducto: variante.nombretipoproducto,\r\n                                nombrecategoriauno: variante.nombrecategoriauno,\r\n                                nombrecategoriados: variante.nombrecategoriados,\r\n                                nombrecategoriatres: variante.nombrecategoriatres,\r\n                                nombrecategoriacuatro: variante.nombrecategoriacuatro\r\n                            };\r\n                            newDet.push(item);\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            console.log(\"NUEVO ARREGLO VARIANTE : \", newDet);\r\n            setListVariantesProductosSeleccionada(newDet);\r\n    \t\t*/\n\n    caso === \"Pedido\" ? abrirCerrarModalVariantes() : abrirCerrarModalVariantes();\n  };\n\n  const abrirCerrarModalVariantes = () => {\n    setModalVariantes(!modalVariantes);\n  };\n\n  const columnas = [{\n    title: 'Id Pedido',\n    field: 'id_fact'\n  }, {\n    title: 'Id Siigo',\n    field: 'id_siigo'\n  }, {\n    title: 'Factura Siigo',\n    field: 'facturasiigo'\n  }, {\n    title: 'Fecha Pedido',\n    field: 'fechafactura'\n  }, {\n    title: 'Id Cliente',\n    field: 'idcliente'\n  }, {\n    title: 'Valor Factura',\n    field: 'valorfactura'\n  }, {\n    title: 'Descuento',\n    field: 'descuento'\n  }, {\n    title: 'Observacion',\n    field: 'observaciones'\n  }];\n  const itemspedidos = [{\n    title: 'Item Pedido',\n    field: 'itempedido'\n  }, {\n    title: 'AdvertName',\n    field: 'advert_code'\n  }, {\n    title: 'AdvertCode',\n    field: 'advert_code'\n  }, {\n    title: 'Marca',\n    field: 'brand_name'\n  }, {\n    title: 'Valor',\n    field: 'price'\n  }, {\n    title: 'Cantidad',\n    field: 'quantity'\n  }, {\n    title: 'Nombre Variante',\n    field: 'variant_name'\n  }, {\n    title: 'Codio de Barra',\n    field: 'variant_barcode'\n  }, {\n    title: 'SKU',\n    field: 'variant_sku'\n  }, {\n    title: 'CodigoSiigo',\n    field: 'codigoproductosiigo'\n  }, {\n    title: 'Direccion',\n    field: 'direccion'\n  }];\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      title: \"Pedidos Bike Exchange\",\n      parent: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        title: \"Pedidos Cycle Wear\",\n        columns: columnas,\n        data: lisPedidos,\n        actions: [{\n          icon: EditIcon,\n          tooltip: 'Editar Producto',\n          onClick: (event, rowData) => seleccionarPedido(rowData, \"Pedido\")\n        }, {\n          icon: EditAttributesIcon,\n          tooltip: 'Variante Producto',\n          onClick: (event, rowData) => seleccionarPedido(rowData, \"Variante\")\n        }],\n        options: {\n          actionsColumnIndex: 11,\n          headerStyle: {\n            backgroundColor: '#015CAB',\n            fontSize: 16,\n            color: 'white'\n          },\n          rowStyle: {\n            fontSize: 14\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom-modal-style\",\n        isOpen: modalVariantes,\n        toggle: abrirCerrarModalVariantes,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: abrirCerrarModalVariantes,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"centrartextomodalvariantes\",\n            children: \"CONSULTAR VARIANTES PRODUCTOS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n            title: \"Productos Cycle Wear\",\n            columns: itemspedidos,\n            data: listVariantesProductoSeleccionada,\n            editable: {\n              onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  const dataUpdate = [...listVariantesProductoSeleccionada];\n                  const index = oldData.tableData.id;\n                  dataUpdate[index] = newData;\n                  setListVariantesProductosSeleccionada([...dataUpdate]);\n                  resolve();\n                }, 1000);\n              })\n            },\n            options: {\n              actionsColumnIndex: 11,\n              headerStyle: {\n                backgroundColor: '#015CAB',\n                fontSize: 16,\n                color: 'white'\n              },\n              rowStyle: {\n                fontSize: 14\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: grabarVariantes,\n            children: \"Grabar cambios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Orders, \"mcUtzKayUaeC1lXBbS/gh+fq95M=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/ProyectosProductivos/backendcyclewear/backend/src/components/sales/orders.js"],"names":["React","Fragment","useEffect","useState","ReactHTMLTableToExcel","MaterialTable","axios","Breadcrumb","data","Datatable","Card","CardBody","CardHeader","Col","Container","Form","FormGroup","Input","Label","Row","Button","Modal","ModalFooter","ModalHeader","ModalBody","swal","Loading","EditIcon","EditAttributesIcon","Orders","lisPedidos","setListPedidos","pedidoSeleccionado","setPedidoSeleccionado","listItemsPedidoSeleccionado","setListItemsPedidoSeleccionado","modalVariantes","setModalVariantes","productoSeleccionado","setProductoSeleccionado","newDet","contador","contadordos","leePedidos","params","pedido","method","url","then","res","catch","error","console","log","seleccionarPedido","caso","abrirCerrarModalVariantes","columnas","title","field","itemspedidos","icon","tooltip","onClick","event","rowData","actionsColumnIndex","headerStyle","backgroundColor","fontSize","color","rowStyle","listVariantesProductoSeleccionada","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","dataUpdate","index","tableData","id","setListVariantesProductosSeleccionada","grabarVariantes"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport Breadcrumb from \"../common/breadcrumb\";\r\nimport data from \"../../assets/data/orders\";\r\nimport Datatable from \"../common/datatable\";\r\nimport {\r\n\tCard, CardBody, CardHeader, Col, Container, Form, FormGroup, Input, Label, Row, Button, Modal, ModalFooter,\r\n\tModalHeader, ModalBody\r\n} from \"reactstrap\";\r\nimport swal from \"sweetalert\";\r\nimport Loading from '../elements/Loading/Loading';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport EditAttributesIcon from '@material-ui/icons/EditAttributes';\r\n\r\nconst Orders = () => {\r\n\tconst [lisPedidos, setListPedidos] = useState([]);\r\n\tconst [pedidoSeleccionado, setPedidoSeleccionado] = useState([]);\r\n    const [listItemsPedidoSeleccionado, setListItemsPedidoSeleccionado] = useState([]);\r\n    const [modalVariantes, setModalVariantes] = useState(false);\r\n\tconst [productoSeleccionado, setProductoSeleccionado] = useState({})\r\n\r\n\tuseEffect(() => {\r\n\t\tconst newDet = [];\r\n\t\tlet contador = 0;\r\n\t\tlet contadordos = 0;\r\n\r\n\t\tconst leePedidos = async () => {\r\n\t\t\t//setLoading(true);\r\n\t\t\tconst params = {\r\n\t\t\t\tpedido: 0\r\n\t\t\t}\r\n\t\t\t//console.log(\"FECHA \", params);\r\n\t\t\tawait axios({\r\n\t\t\t\tmethod: 'get',\r\n\t\t\t\turl: 'https://sitbusiness.co/cyclewear/api/210', params\r\n\t\t\t}).then(res => {\r\n\t\t\t\t//console.log(\"PEDIDOS : \", res.data)\r\n\t\t\t\tsetListPedidos(res.data);\r\n\t\t\t}\r\n\t\t\t).catch(function (error) {\r\n\t\t\t\tconsole.log(\"ERROR LEYENDO FACTURAS\");\r\n\t\t\t})\r\n\t\t}\r\n\t\tleePedidos();\r\n\t}, []);\r\n\r\n\r\n\r\n\tconst seleccionarPedido = (pedido, caso) => {\r\n        console.log(\"PEDIDO : \", pedido)\r\n        setPedidoSeleccionado(pedido);\r\n/*\r\n        const newDet = [];\r\n        {\r\n            listVariantesProductos && listVariantesProductos.map((variante, index) => {\r\n                {\r\n                    //console.log(\"INTERNO VARIANTE : \", variante.idinterno)\r\n                    if (producto.idinterno == variante.idinterno) {\r\n                        let item = {\r\n                            value: variante.value,\r\n                            label: variante.label,\r\n                            id: variante.id,\r\n                            idvariante: variante.idvariante,\r\n                            idinterno: variante.idinterno,\r\n                            nombrevarianteuno: variante.nombrevarianteuno,\r\n                            nombrevariantedos: variante.nombrevariantedos,\r\n                            nombrevariantetres: variante.nombrevariantetres,\r\n                            nombrevariantecuatro: variante.nombrevariantecuatro,\r\n                            nombrevariantecinco: variante.nombrevariantecinco,\r\n                            preciobasevariante: variante.preciobasevariante,\r\n                            precioventavariante: variante.precioventavariante,\r\n                            cantidadvariante: variante.cantidadvariante,\r\n                            codigobarravariante: variante.codigobarravariante,\r\n                            skuvariante: variante.skuvariante,\r\n                            taxcodevariante: variante.taxcodevariante,\r\n                            fechaingreso: variante.fechaingreso,\r\n                            fechamodificacion: variante.fechaingreso,\r\n                            estado: variante.estado,\r\n                            nombretipoproducto: variante.nombretipoproducto,\r\n                            nombrecategoriauno: variante.nombrecategoriauno,\r\n                            nombrecategoriados: variante.nombrecategoriados,\r\n                            nombrecategoriatres: variante.nombrecategoriatres,\r\n                            nombrecategoriacuatro: variante.nombrecategoriacuatro\r\n                        };\r\n                        newDet.push(item);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        console.log(\"NUEVO ARREGLO VARIANTE : \", newDet);\r\n        setListVariantesProductosSeleccionada(newDet);\r\n\t\t*/\r\n        (caso === \"Pedido\") ? abrirCerrarModalVariantes() : abrirCerrarModalVariantes()\r\n    }\r\n\r\n    const abrirCerrarModalVariantes = () => {\r\n        setModalVariantes(!modalVariantes);\r\n    }\r\n\r\n\tconst columnas = [\r\n        {\r\n            title: 'Id Pedido',\r\n            field: 'id_fact'\r\n        },\r\n        {\r\n            title: 'Id Siigo',\r\n            field: 'id_siigo'\r\n        },\r\n        {\r\n            title: 'Factura Siigo',\r\n            field: 'facturasiigo'\r\n        },\r\n        {\r\n            title: 'Fecha Pedido',\r\n            field: 'fechafactura'\r\n        },\r\n        {\r\n            title: 'Id Cliente',\r\n            field: 'idcliente'\r\n        },\r\n\t\t{\r\n            title: 'Valor Factura',\r\n            field: 'valorfactura'\r\n        },\r\n\t\t{\r\n            title: 'Descuento',\r\n            field: 'descuento'\r\n        },\r\n\t\t{\r\n            title: 'Observacion',\r\n            field: 'observaciones'\r\n        },\r\n\r\n    ]\r\n\r\n\tconst itemspedidos = [\r\n        {\r\n            title: 'Item Pedido',\r\n            field: 'itempedido'\r\n        },\r\n        {\r\n            title: 'AdvertName',\r\n            field: 'advert_code'\r\n        },\r\n        {\r\n            title: 'AdvertCode',\r\n            field: 'advert_code'\r\n        },\r\n        {\r\n            title: 'Marca',\r\n            field: 'brand_name'\r\n        },\r\n\t\t{\r\n            title: 'Valor',\r\n            field: 'price'\r\n        },\r\n\t\t{\r\n            title: 'Cantidad',\r\n            field: 'quantity'\r\n        },\r\n\t\t{\r\n            title: 'Nombre Variante',\r\n            field: 'variant_name'\r\n        },\r\n\t\t{\r\n            title: 'Codio de Barra',\r\n            field: 'variant_barcode'\r\n        },\r\n\t\t{\r\n            title: 'SKU',\r\n            field: 'variant_sku'\r\n        },\r\n\t\t{\r\n            title: 'CodigoSiigo',\r\n            field: 'codigoproductosiigo'\r\n        },\r\n\t\t{\r\n            title: 'Direccion',\r\n            field: 'direccion'\r\n        },\r\n    ]\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Breadcrumb title=\"Pedidos Bike Exchange\" parent=\"Sales\" />\r\n\t\t\t<Container fluid={true}>\r\n\t\t\t<MaterialTable\r\n                    title=\"Pedidos Cycle Wear\"\r\n                    columns={columnas}\r\n                    data={lisPedidos}\r\n                    actions={[\r\n                        {\r\n                            icon: EditIcon,\r\n                            tooltip: 'Editar Producto',\r\n                            onClick: (event, rowData) => seleccionarPedido(rowData, \"Pedido\")\r\n                        },\r\n                        {\r\n                            icon: EditAttributesIcon,\r\n                            tooltip: 'Variante Producto',\r\n                            onClick: (event, rowData) => seleccionarPedido(rowData, \"Variante\")\r\n                        }\r\n                    ]}\r\n                    options={{\r\n                        actionsColumnIndex: 11,\r\n                        headerStyle: { backgroundColor: '#015CAB', fontSize: 16, color: 'white' },\r\n                        rowStyle: {\r\n                            fontSize: 14,\r\n                        }\r\n                    }}\r\n                />\r\n\t\t\t\t <Modal className=\"custom-modal-style\" isOpen={modalVariantes} toggle={abrirCerrarModalVariantes}>\r\n                    <ModalHeader\r\n                        toggle={abrirCerrarModalVariantes}>\r\n                        <div className=\"centrartextomodalvariantes\">\r\n                            CONSULTAR VARIANTES PRODUCTOS\r\n                        </div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <MaterialTable\r\n                            title=\"Productos Cycle Wear\"\r\n                            columns={itemspedidos}\r\n                            data={listVariantesProductoSeleccionada}\r\n                            editable={{\r\n                        \r\n                                onRowUpdate: (newData, oldData) =>\r\n                                    new Promise((resolve, reject) => {\r\n                                        setTimeout(() => {\r\n                                            const dataUpdate = [...listVariantesProductoSeleccionada];\r\n                                            const index = oldData.tableData.id;\r\n                                            dataUpdate[index] = newData;\r\n                                            setListVariantesProductosSeleccionada([...dataUpdate]);\r\n        \r\n                                            resolve();\r\n                                        }, 1000)\r\n                                    }),\r\n                               \r\n                            }}\r\n                            options={{\r\n                                actionsColumnIndex: 11,\r\n                                headerStyle: { backgroundColor: '#015CAB', fontSize: 16, color: 'white' },\r\n                                rowStyle: {\r\n                                    fontSize: 14,\r\n                                }\r\n                            }}\r\n                        />\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={grabarVariantes}>Grabar cambios</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\t\t\t</Container>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Orders;\r\n"]},"metadata":{},"sourceType":"module"}